{
  "data": {
    "__schema": {
      "directives": [
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Included when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "include"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "Skipped when true.",
              "name": "if",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
          "locations": [
            "FIELD",
            "FRAGMENT_SPREAD",
            "INLINE_FRAGMENT"
          ],
          "name": "skip"
        },
        {
          "args": [
            {
              "defaultValue": "\"No longer supported\"",
              "description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
              "name": "reason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "description": "Marks an element of a GraphQL schema as no longer supported.",
          "locations": [
            "FIELD_DEFINITION",
            "ARGUMENT_DEFINITION",
            "INPUT_FIELD_DEFINITION",
            "ENUM_VALUE"
          ],
          "name": "deprecated"
        },
        {
          "args": [
            {
              "defaultValue": null,
              "description": "The URL that specifies the behaviour of this scalar.",
              "name": "url",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "description": "Exposes a URL that specifies the behaviour of this scalar.",
          "locations": [
            "SCALAR"
          ],
          "name": "specifiedBy"
        }
      ],
      "mutationType": {
        "name": "Mutation"
      },
      "queryType": {
        "name": "Query"
      },
      "subscriptionType": null,
      "types": [
        {
          "description": "The root query type which gives access points into the data universe.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "Exposes the root query type nested one level down. This is helpful for Relay 1\nwhich can only query top level fields if they are in a particular form.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Query",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The root query type must be a `Node` to work well with Relay 1 mutations. This just resolves to `query`.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The globally unique `ID`.",
                  "name": "nodeId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Fetches an object given its globally unique `ID`.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "INTERFACE",
                "name": "Node",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Filter`.",
              "isDeprecated": false,
              "name": "filters",
              "type": {
                "kind": "OBJECT",
                "name": "FiltersConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a set of `Filter`.",
              "isDeprecated": false,
              "name": "filtersList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Filter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Music`.",
              "isDeprecated": false,
              "name": "musics",
              "type": {
                "kind": "OBJECT",
                "name": "MusicConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a set of `Music`.",
              "isDeprecated": false,
              "name": "musicsList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Music",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Stat`.",
              "isDeprecated": false,
              "name": "stats",
              "type": {
                "kind": "OBJECT",
                "name": "StatsConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a set of `Stat`.",
              "isDeprecated": false,
              "name": "statsList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Stat",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `User`.",
              "isDeprecated": false,
              "name": "users",
              "type": {
                "kind": "OBJECT",
                "name": "UsersConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a set of `User`.",
              "isDeprecated": false,
              "name": "usersList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "User",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Account`.",
              "isDeprecated": false,
              "name": "accounts",
              "type": {
                "kind": "OBJECT",
                "name": "AccountsConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a set of `Account`.",
              "isDeprecated": false,
              "name": "accountsList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Account",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[NATURAL]",
                  "description": "The method to use when ordering `UserAccount`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UserAccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `UserAccount`.",
              "isDeprecated": false,
              "name": "userAccounts",
              "type": {
                "kind": "OBJECT",
                "name": "UserAccountsConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `UserAccount`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UserAccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a set of `UserAccount`.",
              "isDeprecated": false,
              "name": "userAccountsList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "UserAccount",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "filter",
              "type": {
                "kind": "OBJECT",
                "name": "Filter",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "name",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "userId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "filterByNameAndUserId",
              "type": {
                "kind": "OBJECT",
                "name": "Filter",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "music",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "title",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "album",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artist",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "userId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "musicByTitleAndAlbumAndArtistAndUserId",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "BigInt",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "stat",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "id",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "userId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "Int",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "account",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "email",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "accountByEmail",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Artist`.",
              "isDeprecated": false,
              "name": "artistsTree",
              "type": {
                "kind": "OBJECT",
                "name": "ArtistsConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Artist`.",
              "isDeprecated": false,
              "name": "artistsTreeList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Artist",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noArtists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "albums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noAlbums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "titles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noTitles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "genres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noGenres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "keywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noKeywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "shuffle",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BestsRecordFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "bests",
              "type": {
                "kind": "OBJECT",
                "name": "BestsConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noArtists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "albums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noAlbums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "titles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noTitles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "genres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noGenres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "keywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noKeywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "shuffle",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "BestsRecordFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "bestsList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BestsRecord",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "currentMusicbot",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noArtists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "albums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noAlbums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "titles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noTitles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "genres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noGenres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "keywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noKeywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "shuffle",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "doStat",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Genre`.",
              "isDeprecated": false,
              "name": "genresTree",
              "type": {
                "kind": "OBJECT",
                "name": "GenresConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Genre`.",
              "isDeprecated": false,
              "name": "genresTreeList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Genre",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Keyword`.",
              "isDeprecated": false,
              "name": "keywordsTree",
              "type": {
                "kind": "OBJECT",
                "name": "KeywordsConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Keyword`.",
              "isDeprecated": false,
              "name": "keywordsTreeList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Keyword",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noArtists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "albums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noAlbums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "titles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noTitles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "genres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noGenres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "keywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noKeywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "shuffle",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Music`.",
              "isDeprecated": false,
              "name": "playlist",
              "type": {
                "kind": "OBJECT",
                "name": "MusicConnection",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxDuration",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "minRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "maxRating",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Float",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "artists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noArtists",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "albums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noAlbums",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "titles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noTitles",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "genres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noGenres",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "keywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "noKeywords",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "String",
                      "ofType": null
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "shuffle",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "limit",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Music`.",
              "isDeprecated": false,
              "name": "playlistList",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "Music",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The globally unique `ID` to be used in selecting a single `Filter`.",
                  "name": "nodeId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a single `Filter` using its globally unique `ID`.",
              "isDeprecated": false,
              "name": "filterByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "Filter",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The globally unique `ID` to be used in selecting a single `Music`.",
                  "name": "nodeId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a single `Music` using its globally unique `ID`.",
              "isDeprecated": false,
              "name": "musicByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The globally unique `ID` to be used in selecting a single `Stat`.",
                  "name": "nodeId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a single `Stat` using its globally unique `ID`.",
              "isDeprecated": false,
              "name": "statByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The globally unique `ID` to be used in selecting a single `User`.",
                  "name": "nodeId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a single `User` using its globally unique `ID`.",
              "isDeprecated": false,
              "name": "userByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The globally unique `ID` to be used in selecting a single `Account`.",
                  "name": "nodeId",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "SCALAR",
                      "name": "ID",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads a single `Account` using its globally unique `ID`.",
              "isDeprecated": false,
              "name": "accountByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Query",
          "possibleTypes": null
        },
        {
          "description": "An object with a globally unique `ID`.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "INTERFACE",
          "name": "Node",
          "possibleTypes": [
            {
              "kind": "OBJECT",
              "name": "Query",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Filter",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "User",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Account",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Music",
              "ofType": null
            },
            {
              "kind": "OBJECT",
              "name": "Stat",
              "ofType": null
            }
          ]
        },
        {
          "description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "ID",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Filter` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Filter` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Filter",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Filter` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "FiltersEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Filter` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "FiltersConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "minDuration",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "maxDuration",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "minRating",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "maxRating",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "artists",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "noArtists",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "albums",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "noAlbums",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "titles",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "noTitles",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "genres",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "noGenres",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "keywords",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "noKeywords",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "shuffle",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "limit",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Filter`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Filter",
          "possibleTypes": null
        },
        {
          "description": "The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Int",
          "possibleTypes": null
        },
        {
          "description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "String",
          "possibleTypes": null
        },
        {
          "description": "The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Float",
          "possibleTypes": null
        },
        {
          "description": "The `Boolean` scalar type represents `true` or `false`.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Boolean",
          "possibleTypes": null
        },
        {
          "description": "A point in time as described by the [ISO\n8601](https://en.wikipedia.org/wiki/ISO_8601) standard. May or may not include a timezone.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Datetime",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "firstName",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "lastName",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `Account` that is related to this `User`.",
              "isDeprecated": false,
              "name": "account",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": "Please use account instead",
              "description": "Reads and enables pagination through a set of `Account`.",
              "isDeprecated": true,
              "name": "accounts",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "AccountsConnection",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Music`.",
              "isDeprecated": false,
              "name": "musics",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MusicConnection",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Music`.",
              "isDeprecated": false,
              "name": "musicsList",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Music",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Filter`.",
              "isDeprecated": false,
              "name": "filters",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "FiltersConnection",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Filter`.",
              "isDeprecated": false,
              "name": "filtersList",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Filter",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Only read the last `n` values of the set.",
                  "name": "last",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values from our `after` cursor, an alternative to cursor\nbased pagination. May not be used with `last`.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set before (above) this cursor.",
                  "name": "before",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Read all values in the set after (below) this cursor.",
                  "name": "after",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Cursor",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Stat`.",
              "isDeprecated": false,
              "name": "stats",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "StatsConnection",
                  "ofType": null
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "Only read the first `n` values of the set.",
                  "name": "first",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "Skip the first `n` values.",
                  "name": "offset",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A condition to be used in determining which values should be returned by the collection.",
                  "name": "condition",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatCondition",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "A filter to be used in determining which values should be returned by the collection.",
                  "name": "filter",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatFilter",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Reads and enables pagination through a set of `Stat`.",
              "isDeprecated": false,
              "name": "statsList",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Stat",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "User",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "passwordHash",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Account`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Account",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Account` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Account` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Account",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Account` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "AccountsEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Account` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "AccountsConnection",
          "possibleTypes": null
        },
        {
          "description": "A `Account` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Account` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Account",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "AccountsEdge",
          "possibleTypes": null
        },
        {
          "description": "A location in a connection that can be used for resuming pagination.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "Cursor",
          "possibleTypes": null
        },
        {
          "description": "Information about pagination in a connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating forwards, are there more items?",
              "isDeprecated": false,
              "name": "hasNextPage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating backwards, are there more items?",
              "isDeprecated": false,
              "name": "hasPreviousPage",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating backwards, the cursor to continue.",
              "isDeprecated": false,
              "name": "startCursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "When paginating forwards, the cursor to continue.",
              "isDeprecated": false,
              "name": "endCursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "PageInfo",
          "possibleTypes": null
        },
        {
          "description": "Methods to use when ordering `Account`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "EMAIL_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "EMAIL_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_DESC"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "AccountsOrderBy",
          "possibleTypes": null
        },
        {
          "description": "A condition to be used against `Account` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `email` field.",
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountCondition",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against `Account` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `email` field.",
              "name": "email",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountFilter",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountFilter",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against Int fields. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "name": "isNull",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value.",
              "name": "equalTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value.",
              "name": "notEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "name": "distinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "name": "notDistinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list.",
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list.",
              "name": "notIn",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "Int",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value.",
              "name": "lessThan",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value.",
              "name": "lessThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value.",
              "name": "greaterThan",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value.",
              "name": "greaterThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "IntFilter",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against String fields. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "name": "isNull",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value.",
              "name": "equalTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value.",
              "name": "notEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "name": "distinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "name": "notDistinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list.",
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list.",
              "name": "notIn",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value.",
              "name": "lessThan",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value.",
              "name": "lessThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value.",
              "name": "greaterThan",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value.",
              "name": "greaterThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Contains the specified string (case-sensitive).",
              "name": "includes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not contain the specified string (case-sensitive).",
              "name": "notIncludes",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Contains the specified string (case-insensitive).",
              "name": "includesInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not contain the specified string (case-insensitive).",
              "name": "notIncludesInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Starts with the specified string (case-sensitive).",
              "name": "startsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not start with the specified string (case-sensitive).",
              "name": "notStartsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Starts with the specified string (case-insensitive).",
              "name": "startsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not start with the specified string (case-insensitive).",
              "name": "notStartsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Ends with the specified string (case-sensitive).",
              "name": "endsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not end with the specified string (case-sensitive).",
              "name": "notEndsWith",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Ends with the specified string (case-insensitive).",
              "name": "endsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not end with the specified string (case-insensitive).",
              "name": "notEndsWithInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Matches the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "like",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not match the specified pattern (case-sensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "notLike",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Matches the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "likeInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Does not match the specified pattern (case-insensitive). An underscore (_) matches any single character; a percent sign (%) matches any sequence of zero or more characters.",
              "name": "notLikeInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value (case-insensitive).",
              "name": "equalToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value (case-insensitive).",
              "name": "notEqualToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value (case-insensitive).",
              "name": "distinctFromInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value (case-insensitive).",
              "name": "notDistinctFromInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list (case-insensitive).",
              "name": "inInsensitive",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list (case-insensitive).",
              "name": "notInInsensitive",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value (case-insensitive).",
              "name": "lessThanInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value (case-insensitive).",
              "name": "lessThanOrEqualToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value (case-insensitive).",
              "name": "greaterThanInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value (case-insensitive).",
              "name": "greaterThanOrEqualToInsensitive",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StringFilter",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Music` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Music` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Music",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Music` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "MusicEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Music` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MusicConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "album",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "genre",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "artist",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "number",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "rating",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Float",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "duration",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "keywords",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "links",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "String",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Music`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Music",
          "possibleTypes": null
        },
        {
          "description": "A `Music` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Music` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Music",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MusicEdge",
          "possibleTypes": null
        },
        {
          "description": "Methods to use when ordering `Music`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "TITLE_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "TITLE_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_DESC"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "MusicOrderBy",
          "possibleTypes": null
        },
        {
          "description": "A condition to be used against `Music` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `title` field.",
              "name": "title",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicCondition",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against `Music` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `title` field.",
              "name": "title",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicFilter",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicFilter",
          "possibleTypes": null
        },
        {
          "description": "Methods to use when ordering `Filter`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NAME_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NAME_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_DESC"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "FiltersOrderBy",
          "possibleTypes": null
        },
        {
          "description": "A condition to be used against `Filter` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `name` field.",
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterCondition",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against `Filter` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `name` field.",
              "name": "name",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterFilter",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterFilter",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Stat` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Stat` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Stat",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Stat` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "StatsEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Stat` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "StatsConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A globally unique identifier. Can be used in various places throughout the system to identify this single value.",
              "isDeprecated": false,
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "musics",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "albums",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "artists",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "genres",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "links",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "keywords",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "duration",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Datetime",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Stat`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [
            {
              "kind": "INTERFACE",
              "name": "Node",
              "ofType": null
            }
          ],
          "kind": "OBJECT",
          "name": "Stat",
          "possibleTypes": null
        },
        {
          "description": "A signed eight-byte integer. The upper big integer values are greater than the\nmax value for a JavaScript number. Therefore all big integers will be output as\nstrings and not numbers.",
          "enumValues": null,
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "SCALAR",
          "name": "BigInt",
          "possibleTypes": null
        },
        {
          "description": "A `Stat` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Stat` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Stat",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "StatsEdge",
          "possibleTypes": null
        },
        {
          "description": "Methods to use when ordering `Stat`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "USER_ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_DESC"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "StatsOrderBy",
          "possibleTypes": null
        },
        {
          "description": "A condition to be used against `Stat` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatCondition",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against `Stat` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BigIntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `userId` field.",
              "name": "userId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatFilter",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatFilter",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against BigInt fields. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Is null (if `true` is specified) or is not null (if `false` is specified).",
              "name": "isNull",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value.",
              "name": "equalTo",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value.",
              "name": "notEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Not equal to the specified value, treating null like an ordinary value.",
              "name": "distinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Equal to the specified value, treating null like an ordinary value.",
              "name": "notDistinctFrom",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Included in the specified list.",
              "name": "in",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "BigInt",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Not included in the specified list.",
              "name": "notIn",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "SCALAR",
                    "name": "BigInt",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Less than the specified value.",
              "name": "lessThan",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Less than or equal to the specified value.",
              "name": "lessThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than the specified value.",
              "name": "greaterThan",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Greater than or equal to the specified value.",
              "name": "greaterThanOrEqualTo",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "BigIntFilter",
          "possibleTypes": null
        },
        {
          "description": "A `Filter` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Filter` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Filter",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "FiltersEdge",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `User` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `User` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "User",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `User` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "UsersEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `User` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UsersConnection",
          "possibleTypes": null
        },
        {
          "description": "A `User` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `User` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "User",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UsersEdge",
          "possibleTypes": null
        },
        {
          "description": "Methods to use when ordering `User`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ID_DESC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_ASC"
            },
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "PRIMARY_KEY_DESC"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "UsersOrderBy",
          "possibleTypes": null
        },
        {
          "description": "A condition to be used against `User` object types. All fields are tested for equality and combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Checks for equality with the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserCondition",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against `User` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s `id` field.",
              "name": "id",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "IntFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserFilter",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserFilter",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `UserAccount` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `UserAccount` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "UserAccount",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `UserAccount` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "UserAccountsEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `UserAccount` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UserAccountsConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UserAccount",
          "possibleTypes": null
        },
        {
          "description": "A `UserAccount` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `UserAccount` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "UserAccount",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UserAccountsEdge",
          "possibleTypes": null
        },
        {
          "description": "Methods to use when ordering `UserAccount`.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "NATURAL"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "UserAccountsOrderBy",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Artist` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Artist` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Artist",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Artist` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "ArtistsEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Artist` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ArtistsConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "albums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Album",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Artist",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "musics",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "MusicTitle",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Album",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "MusicTitle",
          "possibleTypes": null
        },
        {
          "description": "A `Artist` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Artist` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Artist",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "ArtistsEdge",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `BestsRecord` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `BestsRecord` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BestsRecord",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `BestsRecord` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "BestEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `BestsRecord` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "BestsConnection",
          "possibleTypes": null
        },
        {
          "description": "The return type of our `bests` query.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "content",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "BestsRecord",
          "possibleTypes": null
        },
        {
          "description": "A `BestsRecord` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `BestsRecord` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "BestsRecord",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "BestEdge",
          "possibleTypes": null
        },
        {
          "description": "A filter to be used against `BestsRecord` object types. All fields are combined with a logical ‘and.’",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Filter by the object’s `name` field.",
              "name": "name",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Filter by the object’s `content` field.",
              "name": "content",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StringFilter",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for all expressions in this list.",
              "name": "and",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BestsRecordFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Checks for any expressions in this list.",
              "name": "or",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "BestsRecordFilter",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "Negates the expression.",
              "name": "not",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "BestsRecordFilter",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "BestsRecordFilter",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Genre` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Genre` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Genre",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Genre` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "GenresEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Genre` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "GenresConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Genre",
          "possibleTypes": null
        },
        {
          "description": "A `Genre` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Genre` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Genre",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "GenresEdge",
          "possibleTypes": null
        },
        {
          "description": "A connection to a list of `Keyword` values.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of `Keyword` objects.",
              "isDeprecated": false,
              "name": "nodes",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "Keyword",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of edges which contains the `Keyword` and cursor to aid in pagination.",
              "isDeprecated": false,
              "name": "edges",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "KeywordsEdge",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Information to aid in pagination.",
              "isDeprecated": false,
              "name": "pageInfo",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "PageInfo",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The count of *all* `Keyword` you could get from the connection.",
              "isDeprecated": false,
              "name": "totalCount",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "KeywordsConnection",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Keyword",
          "possibleTypes": null
        },
        {
          "description": "A `Keyword` edge in the connection.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "A cursor for use in pagination.",
              "isDeprecated": false,
              "name": "cursor",
              "type": {
                "kind": "SCALAR",
                "name": "Cursor",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Keyword` at the end of the edge.",
              "isDeprecated": false,
              "name": "node",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "Keyword",
                  "ofType": null
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "KeywordsEdge",
          "possibleTypes": null
        },
        {
          "description": "The root mutation type which contains root level fields which mutate data.",
          "enumValues": null,
          "fields": [
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateFilterInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Creates a single `Filter`.",
              "isDeprecated": false,
              "name": "createFilter",
              "type": {
                "kind": "OBJECT",
                "name": "CreateFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateMusicInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Creates a single `Music`.",
              "isDeprecated": false,
              "name": "createMusic",
              "type": {
                "kind": "OBJECT",
                "name": "CreateMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateStatInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Creates a single `Stat`.",
              "isDeprecated": false,
              "name": "createStat",
              "type": {
                "kind": "OBJECT",
                "name": "CreateStatPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateUserInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Creates a single `User`.",
              "isDeprecated": false,
              "name": "createUser",
              "type": {
                "kind": "OBJECT",
                "name": "CreateUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "CreateAccountInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Creates a single `Account`.",
              "isDeprecated": false,
              "name": "createAccount",
              "type": {
                "kind": "OBJECT",
                "name": "CreateAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFilterByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Filter` using its globally unique id and a patch.",
              "isDeprecated": false,
              "name": "updateFilterByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFilterInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Filter` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateFilter",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateFilterByNameAndUserIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Filter` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateFilterByNameAndUserId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateMusicByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Music` using its globally unique id and a patch.",
              "isDeprecated": false,
              "name": "updateMusicByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateMusicInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Music` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateMusic",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateMusicByTitleAndAlbumAndArtistAndUserIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Music` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateMusicByTitleAndAlbumAndArtistAndUserId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateStatByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Stat` using its globally unique id and a patch.",
              "isDeprecated": false,
              "name": "updateStatByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateStatPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateStatInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Stat` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateStat",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateStatPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateUserByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `User` using its globally unique id and a patch.",
              "isDeprecated": false,
              "name": "updateUserByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateUserInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `User` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateUser",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateAccountByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Account` using its globally unique id and a patch.",
              "isDeprecated": false,
              "name": "updateAccountByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateAccountInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Account` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateAccount",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpdateAccountByEmailInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Updates a single `Account` using a unique key and a patch.",
              "isDeprecated": false,
              "name": "updateAccountByEmail",
              "type": {
                "kind": "OBJECT",
                "name": "UpdateAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteMusicByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Music` using its globally unique id.",
              "isDeprecated": false,
              "name": "deleteMusicByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteMusicInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Music` using a unique key.",
              "isDeprecated": false,
              "name": "deleteMusic",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteMusicByTitleAndAlbumAndArtistAndUserIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Music` using a unique key.",
              "isDeprecated": false,
              "name": "deleteMusicByTitleAndAlbumAndArtistAndUserId",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteStatByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Stat` using its globally unique id.",
              "isDeprecated": false,
              "name": "deleteStatByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteStatPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteStatInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Stat` using a unique key.",
              "isDeprecated": false,
              "name": "deleteStat",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteStatPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteUserByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `User` using its globally unique id.",
              "isDeprecated": false,
              "name": "deleteUserByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteUserInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `User` using a unique key.",
              "isDeprecated": false,
              "name": "deleteUser",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAccountByNodeIdInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Account` using its globally unique id.",
              "isDeprecated": false,
              "name": "deleteAccountByNodeId",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAccountInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Account` using a unique key.",
              "isDeprecated": false,
              "name": "deleteAccount",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAccountByEmailInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Deletes a single `Account` using a unique key.",
              "isDeprecated": false,
              "name": "deleteAccountByEmail",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAccountPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "AuthenticateInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "authenticate",
              "type": {
                "kind": "OBJECT",
                "name": "AuthenticatePayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAllFilterInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deleteAllFilter",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAllFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteAllMusicInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deleteAllMusic",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteAllMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "DeleteFilterInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deleteFilter",
              "type": {
                "kind": "OBJECT",
                "name": "DeleteFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "RegisterUserInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "registerUser",
              "type": {
                "kind": "OBJECT",
                "name": "RegisterUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UnregisterUserInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "unregisterUser",
              "type": {
                "kind": "OBJECT",
                "name": "UnregisterUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "where",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpsertFilterWhere",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpsertFilterInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Upserts a single `Filter`.",
              "isDeprecated": false,
              "name": "upsertFilter",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertFilterPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "where",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpsertMusicWhere",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpsertMusicInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Upserts a single `Music`.",
              "isDeprecated": false,
              "name": "upsertMusic",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertMusicPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "where",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpsertStatWhere",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpsertStatInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Upserts a single `Stat`.",
              "isDeprecated": false,
              "name": "upsertStat",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertStatPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "where",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpsertUserWhere",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpsertUserInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Upserts a single `User`.",
              "isDeprecated": false,
              "name": "upsertUser",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertUserPayload",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": null,
                  "description": null,
                  "name": "where",
                  "type": {
                    "kind": "INPUT_OBJECT",
                    "name": "UpsertAccountWhere",
                    "ofType": null
                  }
                },
                {
                  "defaultValue": null,
                  "description": "The exclusive input argument for this mutation. An object type, make sure to see documentation for this object’s fields.",
                  "name": "input",
                  "type": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "INPUT_OBJECT",
                      "name": "UpsertAccountInput",
                      "ofType": null
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "Upserts a single `Account`.",
              "isDeprecated": false,
              "name": "upsertAccount",
              "type": {
                "kind": "OBJECT",
                "name": "UpsertAccountPayload",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "Mutation",
          "possibleTypes": null
        },
        {
          "description": "The output of our create `Filter` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Filter` that was created by this mutation.",
              "isDeprecated": false,
              "name": "filter",
              "type": {
                "kind": "OBJECT",
                "name": "Filter",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Filter`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Filter`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "filterEdge",
              "type": {
                "kind": "OBJECT",
                "name": "FiltersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CreateFilterPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the create `Filter` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Filter` to be created by this mutation.",
              "name": "filter",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FilterInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "CreateFilterInput",
          "possibleTypes": null
        },
        {
          "description": "An input for mutations affecting `Filter`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noArtists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noAlbums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "titles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noTitles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noGenres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noKeywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "shuffle",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "limit",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterInput",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `user` in the `FilterInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserOnFilterForFilterUserIdFkeyUsingUserPkeyUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterOnFilterForFilterUserIdFkeyNodeIdUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A `UserInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyUserCreateInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterUserIdFkeyInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `user` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserUserPkeyConnect",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `user` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserNodeIdConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `user` to look up the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserUserPkeyDelete",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `user` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserNodeIdDelete",
          "possibleTypes": null
        },
        {
          "description": "The fields on `user` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateUserOnFilterForFilterUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnFilterForFilterUserIdFkeyUsingUserPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `user` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateUserOnFilterForFilterUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `account` in the `UserInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Flag indicating whether all other `account` records that match this relationship should be removed.",
              "name": "deleteOthers",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `account` for the far side of the relationship.",
              "name": "connectByUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountAccountPkeyConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `account` for the far side of the relationship.",
              "name": "connectByEmail",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountEmailUniqueConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `account` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountNodeIdConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `account` for the far side of the relationship.",
              "name": "deleteByUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountAccountPkeyDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `account` for the far side of the relationship.",
              "name": "deleteByEmail",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountEmailUniqueDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `account` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountNodeIdDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
              "name": "updateByUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountOnAccountForAccountUserIdFkeyUsingAccountPkeyUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
              "name": "updateByEmail",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountOnAccountForAccountUserIdFkeyUsingEmailUniqueUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `account` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserOnAccountForAccountUserIdFkeyNodeIdUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A `AccountInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "AccountUserIdFkeyAccountCreateInput",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountUserIdFkeyInverseInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `account` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountAccountPkeyConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `account` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountEmailUniqueConnect",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `account` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountNodeIdConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `account` to look up the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountAccountPkeyDelete",
          "possibleTypes": null
        },
        {
          "description": "The fields on `account` to look up the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountEmailUniqueDelete",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `account` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountNodeIdDelete",
          "possibleTypes": null
        },
        {
          "description": "The fields on `account` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `account` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateAccountOnAccountForAccountUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountOnAccountForAccountUserIdFkeyUsingAccountPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `account` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "passwordHash",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateAccountOnAccountForAccountUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `user` in the `AccountInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserOnAccountForAccountUserIdFkeyUsingUserPkeyUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountOnAccountForAccountUserIdFkeyNodeIdUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A `UserInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyUserCreateInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountUserIdFkeyInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `user` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateUserOnAccountForAccountUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnAccountForAccountUserIdFkeyUsingUserPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `user` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateUserOnAccountForAccountUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `music` in the `UserInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Flag indicating whether all other `music` records that match this relationship should be removed.",
              "name": "deleteOthers",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `music` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicMusicPkeyConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `music` for the far side of the relationship.",
              "name": "connectByTitleAndAlbumAndArtistAndUserId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicUniqueMusicByUserConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `music` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicNodeIdConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `music` for the far side of the relationship.",
              "name": "deleteById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicMusicPkeyDelete",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `music` for the far side of the relationship.",
              "name": "deleteByTitleAndAlbumAndArtistAndUserId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicUniqueMusicByUserDelete",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `music` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicNodeIdDelete",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `music` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicOnMusicForMusicUserIdFkeyUsingMusicPkeyUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `music` for the far side of the relationship.",
              "name": "updateByTitleAndAlbumAndArtistAndUserId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicOnMusicForMusicUserIdFkeyUsingUniqueMusicByUserUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `music` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserOnMusicForMusicUserIdFkeyNodeIdUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "A `MusicInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "MusicUserIdFkeyMusicCreateInput",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicUserIdFkeyInverseInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `music` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicMusicPkeyConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `music` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicUniqueMusicByUserConnect",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `music` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicNodeIdConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `music` to look up the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicMusicPkeyDelete",
          "possibleTypes": null
        },
        {
          "description": "The fields on `music` to look up the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicUniqueMusicByUserDelete",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `music` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicNodeIdDelete",
          "possibleTypes": null
        },
        {
          "description": "The fields on `music` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `music` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateMusicOnMusicForMusicUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicOnMusicForMusicUserIdFkeyUsingMusicPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `music` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genre",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "number",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "rating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateMusicOnMusicForMusicUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `user` in the `MusicInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserOnMusicForMusicUserIdFkeyUsingUserPkeyUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicOnMusicForMusicUserIdFkeyNodeIdUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A `UserInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyUserCreateInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicUserIdFkeyInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `user` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateUserOnMusicForMusicUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnMusicForMusicUserIdFkeyUsingUserPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `user` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateUserOnMusicForMusicUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `filter` in the `UserInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The primary key(s) for `filter` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterFilterPkeyConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `filter` for the far side of the relationship.",
              "name": "connectByNameAndUserId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterUniqueFilterConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `filter` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterNodeIdConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `filter` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterOnFilterForFilterUserIdFkeyUsingFilterPkeyUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `filter` for the far side of the relationship.",
              "name": "updateByNameAndUserId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterOnFilterForFilterUserIdFkeyUsingUniqueFilterUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `filter` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserOnFilterForFilterUserIdFkeyNodeIdUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "A `FilterInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "FilterUserIdFkeyFilterCreateInput",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterUserIdFkeyInverseInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `filter` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterFilterPkeyConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `filter` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterUniqueFilterConnect",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `filter` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterNodeIdConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `filter` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `filter` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateFilterOnFilterForFilterUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterOnFilterForFilterUserIdFkeyUsingFilterPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `filter` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noArtists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noAlbums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "titles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noTitles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noGenres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noKeywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "shuffle",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "limit",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateFilterOnFilterForFilterUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "The fields on `filter` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `filter` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateFilterOnFilterForFilterUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterOnFilterForFilterUserIdFkeyUsingUniqueFilterUpdate",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `filter` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `filter` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FilterPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnFilterForFilterUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "Represents an update to a `Filter`. Fields that are set will be updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noArtists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noAlbums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "titles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noTitles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noGenres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noKeywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "shuffle",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "limit",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterPatch",
          "possibleTypes": null
        },
        {
          "description": "The `filter` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxDuration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "minRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "maxRating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noArtists",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noAlbums",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "titles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noTitles",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noGenres",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "noKeywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "shuffle",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "limit",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterUserIdFkeyFilterCreateInput",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `stat` in the `UserInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "Flag indicating whether all other `stat` records that match this relationship should be removed.",
              "name": "deleteOthers",
              "type": {
                "kind": "SCALAR",
                "name": "Boolean",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `stat` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatStatPkeyConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `stat` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatNodeIdConnect",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `stat` for the far side of the relationship.",
              "name": "deleteById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatStatPkeyDelete",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `stat` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatNodeIdDelete",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `stat` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatOnStatForStatUserIdFkeyUsingStatPkeyUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `stat` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "UserOnStatForStatUserIdFkeyNodeIdUpdate",
                    "ofType": null
                  }
                }
              }
            },
            {
              "defaultValue": null,
              "description": "A `StatInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "INPUT_OBJECT",
                    "name": "StatUserIdFkeyStatCreateInput",
                    "ofType": null
                  }
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatUserIdFkeyInverseInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `stat` to look up the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatStatPkeyConnect",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to connect.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `stat` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatNodeIdConnect",
          "possibleTypes": null
        },
        {
          "description": "The fields on `stat` to look up the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatStatPkeyDelete",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to delete.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `stat` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatNodeIdDelete",
          "possibleTypes": null
        },
        {
          "description": "The fields on `stat` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `stat` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateStatOnStatForStatUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatOnStatForStatUserIdFkeyUsingStatPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `stat` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musics",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateStatOnStatForStatUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "Input for the nested mutation of `user` in the `StatInput` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "connectByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdConnect",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserUserPkeyDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) for `user` for the far side of the relationship.",
              "name": "deleteByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserNodeIdDelete",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateById",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "UserOnStatForStatUserIdFkeyUsingUserPkeyUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The primary key(s) and patch data for `user` for the far side of the relationship.",
              "name": "updateByNodeId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatOnStatForStatUserIdFkeyNodeIdUpdate",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "A `UserInput` object that will be created and connected to this object.",
              "name": "create",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyUserCreateInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatUserIdFkeyInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `user` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateUserOnStatForStatUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnStatForStatUserIdFkeyUsingUserPkeyUpdate",
          "possibleTypes": null
        },
        {
          "description": "An object where the defined keys will be set on the `user` being updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "updateUserOnStatForStatUserIdFkeyPatch",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `user` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatOnStatForStatUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "Represents an update to a `User`. Fields that are set will be updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserPatch",
          "possibleTypes": null
        },
        {
          "description": "The `user` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatUserIdFkeyUserCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `stat` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `stat` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "StatPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnStatForStatUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "Represents an update to a `Stat`. Fields that are set will be updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musics",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatPatch",
          "possibleTypes": null
        },
        {
          "description": "The `stat` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musics",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatUserIdFkeyStatCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `user` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicOnMusicForMusicUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "The `user` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicUserIdFkeyUserCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `music` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `music` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateMusicOnMusicForMusicUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicOnMusicForMusicUserIdFkeyUsingUniqueMusicByUserUpdate",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `music` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `music` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MusicPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnMusicForMusicUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "Represents an update to a `Music`. Fields that are set will be updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genre",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "number",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "rating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicPatch",
          "possibleTypes": null
        },
        {
          "description": "The `music` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genre",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "number",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "rating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicUserIdFkeyMusicCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `user` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountOnAccountForAccountUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "The `user` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountUserIdFkeyUserCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The fields on `account` to look up the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `account` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "updateAccountOnAccountForAccountUserIdFkeyPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountOnAccountForAccountUserIdFkeyUsingEmailUniqueUpdate",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `account` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `account` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserOnAccountForAccountUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "Represents an update to a `Account`. Fields that are set will be updated.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "passwordHash",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountPatch",
          "possibleTypes": null
        },
        {
          "description": "The `account` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "passwordHash",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountUserIdFkeyAccountCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The globally unique `ID` look up for the row to update.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which identifies a single `user` to be connected.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `user` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterOnFilterForFilterUserIdFkeyNodeIdUpdate",
          "possibleTypes": null
        },
        {
          "description": "The `user` to be created by this mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "FilterUserIdFkeyUserCreateInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our create `Music` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Music` that was created by this mutation.",
              "isDeprecated": false,
              "name": "music",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Music`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Music`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "musicEdge",
              "type": {
                "kind": "OBJECT",
                "name": "MusicEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CreateMusicPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the create `Music` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Music` to be created by this mutation.",
              "name": "music",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MusicInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "CreateMusicInput",
          "possibleTypes": null
        },
        {
          "description": "An input for mutations affecting `Music`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genre",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "number",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "rating",
              "type": {
                "kind": "SCALAR",
                "name": "Float",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "MusicInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our create `Stat` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Stat` that was created by this mutation.",
              "isDeprecated": false,
              "name": "stat",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Stat`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Stat`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "statEdge",
              "type": {
                "kind": "OBJECT",
                "name": "StatsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CreateStatPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the create `Stat` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Stat` to be created by this mutation.",
              "name": "stat",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "StatInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "CreateStatInput",
          "possibleTypes": null
        },
        {
          "description": "An input for mutations affecting `Stat`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musics",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "albums",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artists",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "genres",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "links",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "keywords",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "duration",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "StatInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our create `User` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `User` that was created by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `User`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CreateUserPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the create `User` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `User` to be created by this mutation.",
              "name": "user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "CreateUserInput",
          "possibleTypes": null
        },
        {
          "description": "An input for mutations affecting `User`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "createdAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "updatedAt",
              "type": {
                "kind": "SCALAR",
                "name": "Datetime",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "accountUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "musicUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "MusicUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "filtersUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "FilterUserIdFkeyInverseInput",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "statsUsingId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "StatUserIdFkeyInverseInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UserInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our create `Account` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Account` that was created by this mutation.",
              "isDeprecated": false,
              "name": "account",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Account`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Account`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "accountEdge",
              "type": {
                "kind": "OBJECT",
                "name": "AccountsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "CreateAccountPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the create `Account` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Account` to be created by this mutation.",
              "name": "account",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "CreateAccountInput",
          "possibleTypes": null
        },
        {
          "description": "An input for mutations affecting `Account`",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "passwordHash",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userToUserId",
              "type": {
                "kind": "INPUT_OBJECT",
                "name": "AccountUserIdFkeyInput",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AccountInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our update `Filter` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Filter` that was updated by this mutation.",
              "isDeprecated": false,
              "name": "filter",
              "type": {
                "kind": "OBJECT",
                "name": "Filter",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Filter`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Filter`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "filterEdge",
              "type": {
                "kind": "OBJECT",
                "name": "FiltersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpdateFilterPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateFilterByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Filter` to be updated.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Filter` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FilterPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateFilterByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateFilter` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Filter` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FilterPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateFilterInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateFilterByNameAndUserId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Filter` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FilterPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateFilterByNameAndUserIdInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our update `Music` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Music` that was updated by this mutation.",
              "isDeprecated": false,
              "name": "music",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Music`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Music`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "musicEdge",
              "type": {
                "kind": "OBJECT",
                "name": "MusicEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpdateMusicPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateMusicByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Music` to be updated.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Music` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MusicPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateMusicByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateMusic` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Music` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MusicPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateMusicInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateMusicByTitleAndAlbumAndArtistAndUserId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Music` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MusicPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateMusicByTitleAndAlbumAndArtistAndUserIdInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our update `Stat` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Stat` that was updated by this mutation.",
              "isDeprecated": false,
              "name": "stat",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Stat`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Stat`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "statEdge",
              "type": {
                "kind": "OBJECT",
                "name": "StatsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpdateStatPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateStatByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Stat` to be updated.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Stat` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "StatPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateStatByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateStat` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Stat` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "StatPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateStatInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our update `User` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `User` that was updated by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `User`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpdateUserPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateUserByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `User` to be updated.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `User` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateUserByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateUser` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `User` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateUserInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our update `Account` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Account` that was updated by this mutation.",
              "isDeprecated": false,
              "name": "account",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Account`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Account`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "accountEdge",
              "type": {
                "kind": "OBJECT",
                "name": "AccountsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpdateAccountPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateAccountByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Account` to be updated.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Account` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountPatch",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateAccountByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateAccount` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Account` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateAccountInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `updateAccountByEmail` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "An object where the defined keys will be set on the `Account` being updated.",
              "name": "patch",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountPatch",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpdateAccountByEmailInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our delete `Music` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Music` that was deleted by this mutation.",
              "isDeprecated": false,
              "name": "music",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deletedMusicNodeId",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Music`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Music`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "musicEdge",
              "type": {
                "kind": "OBJECT",
                "name": "MusicEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteMusicPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteMusicByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Music` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteMusicByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteMusic` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteMusicInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteMusicByTitleAndAlbumAndArtistAndUserId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteMusicByTitleAndAlbumAndArtistAndUserIdInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our delete `Stat` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Stat` that was deleted by this mutation.",
              "isDeprecated": false,
              "name": "stat",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deletedStatNodeId",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Stat`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Stat`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "statEdge",
              "type": {
                "kind": "OBJECT",
                "name": "StatsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteStatPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteStatByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Stat` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteStatByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteStat` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "BigInt",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteStatInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our delete `User` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `User` that was deleted by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deletedUserNodeId",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `User`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteUserPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteUserByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `User` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteUserByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteUser` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteUserInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our delete `Account` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Account` that was deleted by this mutation.",
              "isDeprecated": false,
              "name": "account",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deletedAccountNodeId",
              "type": {
                "kind": "SCALAR",
                "name": "ID",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Account`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Account`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "accountEdge",
              "type": {
                "kind": "OBJECT",
                "name": "AccountsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteAccountPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteAccountByNodeId` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The globally unique `ID` which will identify a single `Account` to be deleted.",
              "name": "nodeId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "ID",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteAccountByNodeIdInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteAccount` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Int",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteAccountInput",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteAccountByEmail` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteAccountByEmailInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our `authenticate` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "jwtToken",
              "type": {
                "kind": "OBJECT",
                "name": "JwtToken",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "AuthenticatePayload",
          "possibleTypes": null
        },
        {
          "description": null,
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "role",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "exp",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "JwtToken",
          "possibleTypes": null
        },
        {
          "description": "All input for the `authenticate` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "password",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "AuthenticateInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our `deleteAllFilter` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteAllFilterPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteAllFilter` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteAllFilterInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our `deleteAllMusic` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "bigInt",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteAllMusicPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteAllMusic` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteAllMusicInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our `deleteFilter` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "DeleteFilterPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `deleteFilter` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "DeleteFilterInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our `registerUser` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "jwtToken",
              "type": {
                "kind": "OBJECT",
                "name": "JwtToken",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "RegisterUserPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `registerUser` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "password",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "firstName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "lastName",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "RegisterUserInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our `unregisterUser` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input,\nunchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `User`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UnregisterUserPayload",
          "possibleTypes": null
        },
        {
          "description": "All input for the `unregisterUser` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the\npayload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UnregisterUserInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our upsert `Filter` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Filter` that was upserted by this mutation.",
              "isDeprecated": false,
              "name": "filter",
              "type": {
                "kind": "OBJECT",
                "name": "Filter",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Filter`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Filter`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "FiltersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Filter`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "filterEdge",
              "type": {
                "kind": "OBJECT",
                "name": "FiltersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpsertFilterPayload",
          "possibleTypes": null
        },
        {
          "description": "Where conditions for the upsert `Filter` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertFilterWhere",
          "possibleTypes": null
        },
        {
          "description": "All input for the upsert `Filter` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Filter` to be upserted by this mutation.",
              "name": "filter",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "FilterInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertFilterInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our upsert `Music` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Music` that was upserted by this mutation.",
              "isDeprecated": false,
              "name": "music",
              "type": {
                "kind": "OBJECT",
                "name": "Music",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Music`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Music`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "MusicOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Music`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "musicEdge",
              "type": {
                "kind": "OBJECT",
                "name": "MusicEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpsertMusicPayload",
          "possibleTypes": null
        },
        {
          "description": "Where conditions for the upsert `Music` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "title",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "album",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "artist",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertMusicWhere",
          "possibleTypes": null
        },
        {
          "description": "All input for the upsert `Music` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Music` to be upserted by this mutation.",
              "name": "music",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "MusicInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertMusicInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our upsert `Stat` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Stat` that was upserted by this mutation.",
              "isDeprecated": false,
              "name": "stat",
              "type": {
                "kind": "OBJECT",
                "name": "Stat",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Stat`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Stat`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "StatsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Stat`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "statEdge",
              "type": {
                "kind": "OBJECT",
                "name": "StatsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpsertStatPayload",
          "possibleTypes": null
        },
        {
          "description": "Where conditions for the upsert `Stat` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "BigInt",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertStatWhere",
          "possibleTypes": null
        },
        {
          "description": "All input for the upsert `Stat` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Stat` to be upserted by this mutation.",
              "name": "stat",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "StatInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertStatInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our upsert `User` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `User` that was upserted by this mutation.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `User`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "UsersOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `User`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "userEdge",
              "type": {
                "kind": "OBJECT",
                "name": "UsersEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpsertUserPayload",
          "possibleTypes": null
        },
        {
          "description": "Where conditions for the upsert `User` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "id",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertUserWhere",
          "possibleTypes": null
        },
        {
          "description": "All input for the upsert `User` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `User` to be upserted by this mutation.",
              "name": "user",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "UserInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertUserInput",
          "possibleTypes": null
        },
        {
          "description": "The output of our upsert `Account` mutation.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": "The exact same `clientMutationId` that was provided in the mutation input, unchanged and unused. May be used by a client to track mutations.",
              "isDeprecated": false,
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The `Account` that was upserted by this mutation.",
              "isDeprecated": false,
              "name": "account",
              "type": {
                "kind": "OBJECT",
                "name": "Account",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Our root query field type. Allows us to run any query from our mutation payload.",
              "isDeprecated": false,
              "name": "query",
              "type": {
                "kind": "OBJECT",
                "name": "Query",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "Reads a single `User` that is related to this `Account`.",
              "isDeprecated": false,
              "name": "user",
              "type": {
                "kind": "OBJECT",
                "name": "User",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "[PRIMARY_KEY_ASC]",
                  "description": "The method to use when ordering `Account`.",
                  "name": "orderBy",
                  "type": {
                    "kind": "LIST",
                    "name": null,
                    "ofType": {
                      "kind": "NON_NULL",
                      "name": null,
                      "ofType": {
                        "kind": "ENUM",
                        "name": "AccountsOrderBy",
                        "ofType": null
                      }
                    }
                  }
                }
              ],
              "deprecationReason": null,
              "description": "An edge for our `Account`. May be used by Relay 1.",
              "isDeprecated": false,
              "name": "accountEdge",
              "type": {
                "kind": "OBJECT",
                "name": "AccountsEdge",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "UpsertAccountPayload",
          "possibleTypes": null
        },
        {
          "description": "Where conditions for the upsert `Account` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": null,
              "name": "userId",
              "type": {
                "kind": "SCALAR",
                "name": "Int",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": null,
              "name": "email",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertAccountWhere",
          "possibleTypes": null
        },
        {
          "description": "All input for the upsert `Account` mutation.",
          "enumValues": null,
          "fields": null,
          "inputFields": [
            {
              "defaultValue": null,
              "description": "An arbitrary string value with no semantic meaning. Will be included in the payload verbatim. May be used to track mutations by the client.",
              "name": "clientMutationId",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "defaultValue": null,
              "description": "The `Account` to be upserted by this mutation.",
              "name": "account",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "INPUT_OBJECT",
                  "name": "AccountInput",
                  "ofType": null
                }
              }
            }
          ],
          "interfaces": null,
          "kind": "INPUT_OBJECT",
          "name": "UpsertAccountInput",
          "possibleTypes": null
        },
        {
          "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all types supported by this server.",
              "isDeprecated": false,
              "name": "types",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Type",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "The type that query operations will be rooted at.",
              "isDeprecated": false,
              "name": "queryType",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
              "isDeprecated": false,
              "name": "mutationType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "If this server support subscription, the type that subscription operations will be rooted at.",
              "isDeprecated": false,
              "name": "subscriptionType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A list of all directives supported by this server.",
              "isDeprecated": false,
              "name": "directives",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__Directive",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Schema",
          "possibleTypes": null
        },
        {
          "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "kind",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "ENUM",
                  "name": "__TypeKind",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "specifiedByUrl",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "fields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Field",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "interfaces",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "possibleTypes",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__Type",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "enumValues",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__EnumValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "inputFields",
              "type": {
                "kind": "LIST",
                "name": null,
                "ofType": {
                  "kind": "NON_NULL",
                  "name": null,
                  "ofType": {
                    "kind": "OBJECT",
                    "name": "__InputValue",
                    "ofType": null
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "ofType",
              "type": {
                "kind": "OBJECT",
                "name": "__Type",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Type",
          "possibleTypes": null
        },
        {
          "description": "An enum describing what kind of type a given `__Type` is.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Indicates this type is a scalar.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a union. `possibleTypes` is a valid field.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an enum. `enumValues` is a valid field.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is an input object. `inputFields` is a valid field.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a list. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "LIST"
            },
            {
              "deprecationReason": null,
              "description": "Indicates this type is a non-null. `ofType` is a valid field.",
              "isDeprecated": false,
              "name": "NON_NULL"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__TypeKind",
          "possibleTypes": null
        },
        {
          "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [
                {
                  "defaultValue": "false",
                  "description": null,
                  "name": "includeDeprecated",
                  "type": {
                    "kind": "SCALAR",
                    "name": "Boolean",
                    "ofType": null
                  }
                }
              ],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Field",
          "possibleTypes": null
        },
        {
          "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "type",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "OBJECT",
                  "name": "__Type",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": "A GraphQL-formatted string representing the default value for this input value.",
              "isDeprecated": false,
              "name": "defaultValue",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__InputValue",
          "possibleTypes": null
        },
        {
          "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isDeprecated",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "deprecationReason",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__EnumValue",
          "possibleTypes": null
        },
        {
          "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
          "enumValues": null,
          "fields": [
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "name",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "String",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "description",
              "type": {
                "kind": "SCALAR",
                "name": "String",
                "ofType": null
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "isRepeatable",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "SCALAR",
                  "name": "Boolean",
                  "ofType": null
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "locations",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "ENUM",
                      "name": "__DirectiveLocation",
                      "ofType": null
                    }
                  }
                }
              }
            },
            {
              "args": [],
              "deprecationReason": null,
              "description": null,
              "isDeprecated": false,
              "name": "args",
              "type": {
                "kind": "NON_NULL",
                "name": null,
                "ofType": {
                  "kind": "LIST",
                  "name": null,
                  "ofType": {
                    "kind": "NON_NULL",
                    "name": null,
                    "ofType": {
                      "kind": "OBJECT",
                      "name": "__InputValue",
                      "ofType": null
                    }
                  }
                }
              }
            }
          ],
          "inputFields": null,
          "interfaces": [],
          "kind": "OBJECT",
          "name": "__Directive",
          "possibleTypes": null
        },
        {
          "description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
          "enumValues": [
            {
              "deprecationReason": null,
              "description": "Location adjacent to a query operation.",
              "isDeprecated": false,
              "name": "QUERY"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a mutation operation.",
              "isDeprecated": false,
              "name": "MUTATION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a subscription operation.",
              "isDeprecated": false,
              "name": "SUBSCRIPTION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field.",
              "isDeprecated": false,
              "name": "FIELD"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment definition.",
              "isDeprecated": false,
              "name": "FRAGMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a fragment spread.",
              "isDeprecated": false,
              "name": "FRAGMENT_SPREAD"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an inline fragment.",
              "isDeprecated": false,
              "name": "INLINE_FRAGMENT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a variable definition.",
              "isDeprecated": false,
              "name": "VARIABLE_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a schema definition.",
              "isDeprecated": false,
              "name": "SCHEMA"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a scalar definition.",
              "isDeprecated": false,
              "name": "SCALAR"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an object type definition.",
              "isDeprecated": false,
              "name": "OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a field definition.",
              "isDeprecated": false,
              "name": "FIELD_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an argument definition.",
              "isDeprecated": false,
              "name": "ARGUMENT_DEFINITION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an interface definition.",
              "isDeprecated": false,
              "name": "INTERFACE"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to a union definition.",
              "isDeprecated": false,
              "name": "UNION"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum definition.",
              "isDeprecated": false,
              "name": "ENUM"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an enum value definition.",
              "isDeprecated": false,
              "name": "ENUM_VALUE"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object type definition.",
              "isDeprecated": false,
              "name": "INPUT_OBJECT"
            },
            {
              "deprecationReason": null,
              "description": "Location adjacent to an input object field definition.",
              "isDeprecated": false,
              "name": "INPUT_FIELD_DEFINITION"
            }
          ],
          "fields": null,
          "inputFields": null,
          "interfaces": null,
          "kind": "ENUM",
          "name": "__DirectiveLocation",
          "possibleTypes": null
        }
      ]
    }
  }
}